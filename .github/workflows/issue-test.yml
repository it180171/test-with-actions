name: React to Label Event
on:
  issues:
    types: [labeled, unlabeled]
jobs:
  label_event_action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            // Use 'context' directly for event information
            const eventName = context.eventName;
            const action = context.payload.action; // 'labeled', 'unlabeled'

            console.log(`Event: ${eventName}, Action: ${action}`);

            // The 'payload' object contains the event-specific data
            // For 'labeled'/'unlabeled' events, 'context.payload.label' has the changed label
            // and 'context.payload.issue' (or .pull_request) has the item that was labeled.

            if (eventName === 'issues' && (action === 'labeled' || action === 'unlabeled')) {
              if (context.payload.label) {
                const changedLabelName = context.payload.label.name;
                const changedLabelColor = context.payload.label.color;
                console.log(`The label "${changedLabelName}" (color: ${changedLabelColor}) was ${action} on an issue.`);

                if (context.payload.issue && context.payload.issue.labels) {
                  const currentIssueLabels = context.payload.issue.labels.map(l => l.name);
                  console.log("Current labels on issue:", currentIssueLabels);
                }
              } else {
                console.log("Error: context.payload.label is missing for a labeled/unlabeled event.");
              }
            } else if (eventName === 'pull_request' && (action === 'labeled' || action === 'unlabeled')) {
              // Example if you were also triggering on pull_request label events
              if (context.payload.label) {
                const changedLabelName = context.payload.label.name;
                console.log(`The label "${changedLabelName}" was ${action} on a PR.`);
                if (context.payload.pull_request && context.payload.pull_request.labels) {
                  const currentPRLabels = context.payload.pull_request.labels.map(l => l.name);
                  console.log("Current PR labels:", currentPRLabels);
                }
              } else {
                console.log("Error: context.payload.label is missing for a labeled/unlabeled event.");
              }
            }
            else {
              // This else block should ideally not be reached if your 'on:' trigger is only for labeled/unlabeled
              console.log("This script is intended for 'labeled' or 'unlabeled' events on issues/PRs.");
              console.log("Payload:", JSON.stringify(context.payload, null, 2)); // For debugging other events
            }